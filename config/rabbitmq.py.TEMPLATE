# RabbitMQ Configuration file
# Classification (U)
# Unclassified until filled.
user = "USER"
japd = "PSWORD"
host = "IP_ADDRESS"
# List of hosts along with their ports to a multiple node RabbitMQ cluster.
# Format of each entry is: "IP:PORT".
# Example: host_list = ["hostname:5672", "hostname2:5672", "hostname:5673"]
# Note:  If host_list is set, it will take precedence over the host entry.
host_list = []
# Name of the exchange in the RabbitMQ node.
exchange_name = "EXCHANGE_NAME"
# List of queues in RabbitMQ.
# Queue names are direct correlation to the subject names in the emails.
# Queues names must be PascalCase style.
valid_queues = ["QueueName1", "QueueName2"]
# List of queues for file attachment queues.
# Queue names are direct correlation to the subject names in the emails.
# Queues names must be PascalCase style.
file_queues = ["FileQueueName1", "FileQueueName2"]
# Name of error queue to handle incorrectly routed emails.
err_queue = "ERROR_QUEUE_NAME"
# Name of queue for handling error file attachments.
err_file_queue = "ERROR_FILE_QUEUE_NAME"
# Archive directory path for non-processed email files.
email_dir = "DIRECTORY_PATH/email_dir"
# Directory path and file name to the program log.
# Note: A date format of %Y%m%d will be appended to the end of the log file.
log_file = "DIRECTORY_PATH/logs/mail_2_rmq.log"
# Dictionary of valid email addresses and their associated queue names.
# Format of email should be: "name@domain"
# Example: queue_dict = {"name1@domain": "QueueName", "name2@domain": "QueueName2"}
queue_dict = {}
# Name of error queue to handle incorrect email address or missing attachment.
err_addr_queue = "ERROR_ADDR_QUEUE_NAME"
#
# This section is for debugging use only.
#
# Debugging address.
# This address is for debugging purposes only.
# Example: debug_address = "debug_name@domain"
# NOTE: This should be set to prevent an empty From email address accidentally going into debug mode.
debug_address = "debug_name@domain"
# List of queues in RabbitMQ.
# Queue names are direct correlation to the subject names in the emails.
# Queues names must be PascalCase style.
# Warning: Do not contain the same name as in the valid_queues entry as that is a production queue.
debug_valid_queues = ["DebugQueue"]
# Dictionary of subjects with one or more queues bound to the subject to go into RabbitMQ.
# Queue names are direct correlation to the subject names in the emails.
# Queues names must be PascalCase style.
# Warning: Do not contain the same name as in the valid_queues entry as that is a production queue.
debug_valid_queues2 = {"DebugQueue3": ["DebugQueue3", "DebugQueue4"]}
# Dictionary of valid from email addresses and their associated queue names.
# Format of email should be: "name@domain"
# Example: debug_queue_dict = {"debug_name@domain": "DebugQueue"}
# Warning: Do not contain the same name as in the queue_dict entry as that is a production queue.
debug_queue_dict = {"debug_name@domain": "DebugQueue2"}
#
# Do not modify settings below unless you know what you are doing.
#
# Directory path to temporary staging directory.
tmp_dir = "/tmp"
# Types of attachments to extract from email.
# Note:  application/octet-stream and text/csv is for .csv files.
attach_types = ["application/pdf", "application/octet-stream", "text/csv"]
# Filter out strings within the subject line.
# Do not modify unless you understand regular expressions.
subj_filter = "\[.*\]"
# RabbitMQ listening port, default is 5672.
port = 5672
# Type of exchange:  direct, topic, fanout, headers
exchange_type = "direct"
# Is exchange durable: True|False
x_durable = True
# Are queues durable: True|False
q_durable = True
# Do queues automatically delete once message is processed:  True|False
auto_delete = False
# Time in seconds for ensuring connections stays active.
# If set to 0, will turn the heartbeat off.
heartbeat = 60
